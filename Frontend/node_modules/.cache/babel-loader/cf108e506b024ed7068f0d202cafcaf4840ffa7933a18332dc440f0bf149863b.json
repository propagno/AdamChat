{"ast":null,"code":"// src/services/auth.js\nconst cognitoDomain=process.env.REACT_APP_COGNITO_DOMAIN;const clientId=process.env.REACT_APP_CLIENT_ID;const redirectUri=process.env.REACT_APP_REDIRECT_URI;export const getCodeFromUrl=()=>{const urlParams=new URLSearchParams(window.location.search);return urlParams.get('code');};export const exchangeCodeForToken=async code=>{const tokenEndpoint=`${cognitoDomain}/oauth2/token`;const body=new URLSearchParams({grant_type:'authorization_code',client_id:clientId,redirect_uri:redirectUri,code:code});const response=await fetch(tokenEndpoint,{method:'POST',headers:{'Content-Type':'application/x-www-form-urlencoded'},body:body.toString()});const data=await response.json();localStorage.setItem('id_token',data.id_token);localStorage.setItem('access_token',data.access_token);};export const login=()=>{window.location.href=`${cognitoDomain}/login?client_id=${clientId}&response_type=code&redirect_uri=${redirectUri}`;};","map":{"version":3,"names":["cognitoDomain","process","env","REACT_APP_COGNITO_DOMAIN","clientId","REACT_APP_CLIENT_ID","redirectUri","REACT_APP_REDIRECT_URI","getCodeFromUrl","urlParams","URLSearchParams","window","location","search","get","exchangeCodeForToken","code","tokenEndpoint","body","grant_type","client_id","redirect_uri","response","fetch","method","headers","toString","data","json","localStorage","setItem","id_token","access_token","login","href"],"sources":["C:/Users/dudu-/Python Projects/AdamChat/Frontend/src/services/auth.js"],"sourcesContent":["// src/services/auth.js\r\nconst cognitoDomain = process.env.REACT_APP_COGNITO_DOMAIN;\r\nconst clientId = process.env.REACT_APP_CLIENT_ID;\r\nconst redirectUri = process.env.REACT_APP_REDIRECT_URI;\r\n\r\nexport const getCodeFromUrl = () => {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    return urlParams.get('code');\r\n};\r\n\r\nexport const exchangeCodeForToken = async (code) => {\r\n    const tokenEndpoint = `${cognitoDomain}/oauth2/token`;\r\n\r\n    const body = new URLSearchParams({\r\n        grant_type: 'authorization_code',\r\n        client_id: clientId,\r\n        redirect_uri: redirectUri,\r\n        code: code\r\n    });\r\n\r\n    const response = await fetch(tokenEndpoint, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded'\r\n        },\r\n        body: body.toString()\r\n    });\r\n\r\n    const data = await response.json();\r\n    localStorage.setItem('id_token', data.id_token);\r\n    localStorage.setItem('access_token', data.access_token);\r\n};\r\n\r\nexport const login = () => {\r\n    window.location.href = `${cognitoDomain}/login?client_id=${clientId}&response_type=code&redirect_uri=${redirectUri}`;\r\n};\r\n"],"mappings":"AAAA;AACA,KAAM,CAAAA,aAAa,CAAGC,OAAO,CAACC,GAAG,CAACC,wBAAwB,CAC1D,KAAM,CAAAC,QAAQ,CAAGH,OAAO,CAACC,GAAG,CAACG,mBAAmB,CAChD,KAAM,CAAAC,WAAW,CAAGL,OAAO,CAACC,GAAG,CAACK,sBAAsB,CAEtD,MAAO,MAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAChC,KAAM,CAAAC,SAAS,CAAG,GAAI,CAAAC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAC7D,MAAO,CAAAJ,SAAS,CAACK,GAAG,CAAC,MAAM,CAAC,CAChC,CAAC,CAED,MAAO,MAAM,CAAAC,oBAAoB,CAAG,KAAO,CAAAC,IAAI,EAAK,CAChD,KAAM,CAAAC,aAAa,CAAG,GAAGjB,aAAa,eAAe,CAErD,KAAM,CAAAkB,IAAI,CAAG,GAAI,CAAAR,eAAe,CAAC,CAC7BS,UAAU,CAAE,oBAAoB,CAChCC,SAAS,CAAEhB,QAAQ,CACnBiB,YAAY,CAAEf,WAAW,CACzBU,IAAI,CAAEA,IACV,CAAC,CAAC,CAEF,KAAM,CAAAM,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACN,aAAa,CAAE,CACxCO,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACL,cAAc,CAAE,mCACpB,CAAC,CACDP,IAAI,CAAEA,IAAI,CAACQ,QAAQ,CAAC,CACxB,CAAC,CAAC,CAEF,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAL,QAAQ,CAACM,IAAI,CAAC,CAAC,CAClCC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAEH,IAAI,CAACI,QAAQ,CAAC,CAC/CF,YAAY,CAACC,OAAO,CAAC,cAAc,CAAEH,IAAI,CAACK,YAAY,CAAC,CAC3D,CAAC,CAED,MAAO,MAAM,CAAAC,KAAK,CAAGA,CAAA,GAAM,CACvBtB,MAAM,CAACC,QAAQ,CAACsB,IAAI,CAAG,GAAGlC,aAAa,oBAAoBI,QAAQ,oCAAoCE,WAAW,EAAE,CACxH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}